

##############################################
###########                       ############
###########   DeviceVolume CRD    ############
###########                       ############
##############################################

# DeviceVolume CRD is autogenerated via `make manifests` command.
# Do the modification in the code and run the `make manifests` command
# to generate the CRD definition

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.8
  creationTimestamp: null
  name: devicevolumes.local.openebs.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.ownerNodeID
    description: Node where the volume is created
    name: Node
    type: string
  - JSONPath: .spec.capacity
    description: Size of the volume
    name: Size
    type: string
  - JSONPath: .status.state
    description: Status of the volume
    name: Status
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: Age of the volume
    name: Age
    type: date
  group: local.openebs.io
  names:
    kind: DeviceVolume
    listKind: DeviceVolumeList
    plural: devicevolumes
    shortNames:
    - devicevol
    singular: devicevolume
  preserveUnknownFields: false
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: DeviceVolume represents a Device based volume
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: VolumeInfo defines Device info
          properties:
            capacity:
              description: Capacity of the volume
              minLength: 1
              type: string
            devname:
              description: device name this is the name that will be stored on the
                meta partition on the disk
              minLength: 1
              type: string
            ownerNodeID:
              description: OwnerNodeID is the Node ID where the ZPOOL is running which
                is where the volume has been provisioned. OwnerNodeID can not be edited
                after the volume has been provisioned.
              minLength: 1
              type: string
          required:
          - capacity
          - devname
          - ownerNodeID
          type: object
        status:
          description: VolStatus string that specifies the current state of the volume
            provisioning request.
          properties:
            error:
              description: Error denotes the error occurred during provisioning a
                volume. Error field should only be set when State becomes Failed.
              properties:
                code:
                  description: VolumeErrorCode represents the error code to represent
                    specific class of errors.
                  type: string
                message:
                  type: string
              type: object
            state:
              description: State specifies the current state of the volume provisioning
                request. The state "Pending" means that the volume creation request
                has not processed yet. The state "Ready" means that the volume has
                been created and it is ready for the use.
              enum:
              - Pending
              - Ready
              - Failed
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
